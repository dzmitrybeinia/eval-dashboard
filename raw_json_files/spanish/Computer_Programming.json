{
  "request": {
    "lesson_description": "Introduction to basic programming concepts: variables, data types, and control structures.",
    "exercises_ratio": 0.3,
    "grade_level": "8th grade",
    "estimated_length": 25,
    "learning_standard": "CSTA K-12 Computer Science Standards: 2-AP-11 - Create clearly named variables that represent different data types and perform operations on their values.",
    "additional_guidance": "",
    "activity_type": "LearningZone",
    "files_content": null,
    "request_id": "6bab4a0b",
    "topicInEnglish": "Computer Programming",
    "generationLanguage": "es-ES"
  },
  "response": {
    "title": "Introduction to Basic Programming Concepts",
    "slides": [
      {
        "content": "¡Bienvenidos a una aventura en el mundo de la programación! 🌟 Hoy comenzaremos a explorar conceptos fundamentales que son la base de cualquier programa: variables, tipos de datos y estructuras de control. ¡Prepárate para descubrir cómo los programadores dan vida a sus ideas!",
        "title": "¡Comencemos con la programación!",
        "themes": [
          "Introducción a la programación"
        ],
        "image_search_string": "programming introduction",
        "question_types": [
          "Intro"
        ]
      },
      {
        "content": "En programación, una **variable** es un espacio de memoria que almacenamos para guardar un valor. Por ejemplo, puedes usar una variable para guardar tu nombre, como \"nombre = 'Juan'\". Las variables tienen nombres únicos que las identifican en el código.",
        "title": "¿Qué es una variable?",
        "themes": [
          "Definición de variable"
        ],
        "image_search_string": "variable concept",
        "question_types": [
          "ShortForm",
          "Match"
        ]
      },
      {
        "content": "Existen diferentes **tipos de datos** que podemos almacenar en las variables. Los más comunes son:\n\n- **Texto (String):** Por ejemplo, \"Hola Mundo\".\n- **Números enteros (Int):** Como 10, -3, 0.\n- **Números decimales (Float):** Como 3.14, -0.5.\n- **Booleanos:** Verdadero (True) o Falso (False).\n\nCada tipo de dato se usa para una finalidad específica.",
        "title": "Tipos de datos en programación",
        "themes": [
          "Tipos de datos en variables"
        ],
        "image_search_string": "data types programming",
        "question_types": [
          "ShortForm",
          "Match",
          "Grouping"
        ]
      },
      {
        "content": "Las estructuras de control permiten que un programa tome decisiones o repita acciones. Las principales son:\n\n1. **Condicionales (if, else):** Permiten ejecutar código basado en condiciones.\n2. **Bucles (for, while):** Repiten una acción varias veces según una regla.",
        "title": "Estructuras de control",
        "themes": [
          "Concepto de estructuras de control"
        ],
        "image_search_string": "control structures programming",
        "question_types": [
          "ShortForm",
          "Match",
          "Grouping"
        ]
      },
      {
        "content": "Un ejemplo de condicional en Python:\n```python\nedad = 18\nif edad >= 18:\n    print(\"Eres mayor de edad\")\nelse:\n    print(\"Eres menor de edad\")\n```\nAquí, el programa verifica si la variable `edad` es mayor o igual a 18 y elige qué mensaje mostrar.",
        "title": "Ejemplo de condicional",
        "themes": [
          "Ejemplo práctico de condicional"
        ],
        "image_search_string": "conditional statement code",
        "question_types": [
          "ShortForm",
          "Match"
        ]
      }
    ],
    "topicInEnglish": "Computer Programming",
    "generationLanguage": "es-ES"
  }
}
